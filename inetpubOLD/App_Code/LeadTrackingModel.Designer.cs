//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.ActionStatu), "PropertyToCleanUpStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToCleanUpStatu), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Lab", "Lab", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Lab), "BloodResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.BloodResult), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_BloodResults_LeadValueCategory", "LeadValueCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.LeadValueCategory), "BloodResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.BloodResult), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Samples", "Samples", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Sample), "BloodResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.BloodResult), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Status), "BloodResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.BloodResult), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Notes_Classification", "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Classification), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Note), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.CleanUpStatu), "PropertyToCleanUpStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToCleanUpStatu), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Property_ConstructionType", "ConstructionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.ConstructionType), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Property), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Family_PrimaryLanguage", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Language), "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Family), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_FPLinkType", "FPLinkType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.FPLinkType), "PersonToProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PersonToProperty), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Person_PrimaryLanguage", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Language), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Medium", "Medium", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Medium), "PropertyToCleanUpStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToCleanUpStatu), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Samples_Medium", "Medium", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Medium), "Samples", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Sample), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Notes_NoteType", "NoteType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.NoteType), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Note), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Notes", "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Note), "PropertyToNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToNote), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Person_ReleaseStatus", "ReleaseStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.ReleaseStatu), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Person_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Status), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Person), "PersonToProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PersonToProperty), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Property), "PersonToProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PersonToProperty), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Property_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Property), "Property1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Property), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Property), "PropertyToCleanUpStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToCleanUpStatu), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeadTrackingProgram2Model.Property), "PropertyToNotes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.PropertyToNote), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Questoinaire_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Property), "Questoinaire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Questoinaire), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Samples_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.Property), "Samples", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Sample), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FK_Samples_SampleType", "SampleType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LeadTrackingProgram2Model.SampleType), "Samples", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Sample), true)]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "BloodResultsToPerson", "BloodResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.BloodResult), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FamilyToLanguage", "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Family), "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Language))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "FamilyToNotes", "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Family), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Note))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "PersonToFamily", "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Family), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "PersonToLanguage", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Language), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "PersonToNotes", "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Note), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person))]
[assembly: EdmRelationshipAttribute("LeadTrackingProgram2Model", "PersonToQuestionaire", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Person), "Questoinaire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeadTrackingProgram2Model.Questoinaire))]

#endregion

namespace LeadTrackingProgram2Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LeadTrackingProgram2Entities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LeadTrackingProgram2Entities2 object using the connection string found in the 'LeadTrackingProgram2Entities2' section of the application configuration file.
        /// </summary>
        public LeadTrackingProgram2Entities2() : base("name=LeadTrackingProgram2Entities2", "LeadTrackingProgram2Entities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LeadTrackingProgram2Entities2 object.
        /// </summary>
        public LeadTrackingProgram2Entities2(string connectionString) : base(connectionString, "LeadTrackingProgram2Entities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LeadTrackingProgram2Entities2 object.
        /// </summary>
        public LeadTrackingProgram2Entities2(EntityConnection connection) : base(connection, "LeadTrackingProgram2Entities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionStatu> ActionStatus
        {
            get
            {
                if ((_ActionStatus == null))
                {
                    _ActionStatus = base.CreateObjectSet<ActionStatu>("ActionStatus");
                }
                return _ActionStatus;
            }
        }
        private ObjectSet<ActionStatu> _ActionStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BloodResult> BloodResults
        {
            get
            {
                if ((_BloodResults == null))
                {
                    _BloodResults = base.CreateObjectSet<BloodResult>("BloodResults");
                }
                return _BloodResults;
            }
        }
        private ObjectSet<BloodResult> _BloodResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Classification> Classifications
        {
            get
            {
                if ((_Classifications == null))
                {
                    _Classifications = base.CreateObjectSet<Classification>("Classifications");
                }
                return _Classifications;
            }
        }
        private ObjectSet<Classification> _Classifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CleanUpStatu> CleanUpStatus
        {
            get
            {
                if ((_CleanUpStatus == null))
                {
                    _CleanUpStatus = base.CreateObjectSet<CleanUpStatu>("CleanUpStatus");
                }
                return _CleanUpStatus;
            }
        }
        private ObjectSet<CleanUpStatu> _CleanUpStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConstructionType> ConstructionTypes
        {
            get
            {
                if ((_ConstructionTypes == null))
                {
                    _ConstructionTypes = base.CreateObjectSet<ConstructionType>("ConstructionTypes");
                }
                return _ConstructionTypes;
            }
        }
        private ObjectSet<ConstructionType> _ConstructionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Family> Families
        {
            get
            {
                if ((_Families == null))
                {
                    _Families = base.CreateObjectSet<Family>("Families");
                }
                return _Families;
            }
        }
        private ObjectSet<Family> _Families;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FPLinkType> FPLinkTypes
        {
            get
            {
                if ((_FPLinkTypes == null))
                {
                    _FPLinkTypes = base.CreateObjectSet<FPLinkType>("FPLinkTypes");
                }
                return _FPLinkTypes;
            }
        }
        private ObjectSet<FPLinkType> _FPLinkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lab> Labs
        {
            get
            {
                if ((_Labs == null))
                {
                    _Labs = base.CreateObjectSet<Lab>("Labs");
                }
                return _Labs;
            }
        }
        private ObjectSet<Lab> _Labs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadValueCategory> LeadValueCategories
        {
            get
            {
                if ((_LeadValueCategories == null))
                {
                    _LeadValueCategories = base.CreateObjectSet<LeadValueCategory>("LeadValueCategories");
                }
                return _LeadValueCategories;
            }
        }
        private ObjectSet<LeadValueCategory> _LeadValueCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medium> Media
        {
            get
            {
                if ((_Media == null))
                {
                    _Media = base.CreateObjectSet<Medium>("Media");
                }
                return _Media;
            }
        }
        private ObjectSet<Medium> _Media;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NoteType> NoteTypes
        {
            get
            {
                if ((_NoteTypes == null))
                {
                    _NoteTypes = base.CreateObjectSet<NoteType>("NoteTypes");
                }
                return _NoteTypes;
            }
        }
        private ObjectSet<NoteType> _NoteTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonToProperty> PersonToProperties
        {
            get
            {
                if ((_PersonToProperties == null))
                {
                    _PersonToProperties = base.CreateObjectSet<PersonToProperty>("PersonToProperties");
                }
                return _PersonToProperties;
            }
        }
        private ObjectSet<PersonToProperty> _PersonToProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyToCleanUpStatu> PropertyToCleanUpStatus
        {
            get
            {
                if ((_PropertyToCleanUpStatus == null))
                {
                    _PropertyToCleanUpStatus = base.CreateObjectSet<PropertyToCleanUpStatu>("PropertyToCleanUpStatus");
                }
                return _PropertyToCleanUpStatus;
            }
        }
        private ObjectSet<PropertyToCleanUpStatu> _PropertyToCleanUpStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyToNote> PropertyToNotes
        {
            get
            {
                if ((_PropertyToNotes == null))
                {
                    _PropertyToNotes = base.CreateObjectSet<PropertyToNote>("PropertyToNotes");
                }
                return _PropertyToNotes;
            }
        }
        private ObjectSet<PropertyToNote> _PropertyToNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Questoinaire> Questoinaires
        {
            get
            {
                if ((_Questoinaires == null))
                {
                    _Questoinaires = base.CreateObjectSet<Questoinaire>("Questoinaires");
                }
                return _Questoinaires;
            }
        }
        private ObjectSet<Questoinaire> _Questoinaires;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReleaseStatu> ReleaseStatus
        {
            get
            {
                if ((_ReleaseStatus == null))
                {
                    _ReleaseStatus = base.CreateObjectSet<ReleaseStatu>("ReleaseStatus");
                }
                return _ReleaseStatus;
            }
        }
        private ObjectSet<ReleaseStatu> _ReleaseStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sample> Samples
        {
            get
            {
                if ((_Samples == null))
                {
                    _Samples = base.CreateObjectSet<Sample>("Samples");
                }
                return _Samples;
            }
        }
        private ObjectSet<Sample> _Samples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SampleType> SampleTypes
        {
            get
            {
                if ((_SampleTypes == null))
                {
                    _SampleTypes = base.CreateObjectSet<SampleType>("SampleTypes");
                }
                return _SampleTypes;
            }
        }
        private ObjectSet<SampleType> _SampleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SeedTable> SeedTables
        {
            get
            {
                if ((_SeedTables == null))
                {
                    _SeedTables = base.CreateObjectSet<SeedTable>("SeedTables");
                }
                return _SeedTables;
            }
        }
        private ObjectSet<SeedTable> _SeedTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionStatus(ActionStatu actionStatu)
        {
            base.AddObject("ActionStatus", actionStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BloodResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBloodResults(BloodResult bloodResult)
        {
            base.AddObject("BloodResults", bloodResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassifications(Classification classification)
        {
            base.AddObject("Classifications", classification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CleanUpStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCleanUpStatus(CleanUpStatu cleanUpStatu)
        {
            base.AddObject("CleanUpStatus", cleanUpStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConstructionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConstructionTypes(ConstructionType constructionType)
        {
            base.AddObject("ConstructionTypes", constructionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Families EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamilies(Family family)
        {
            base.AddObject("Families", family);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FPLinkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFPLinkTypes(FPLinkType fPLinkType)
        {
            base.AddObject("FPLinkTypes", fPLinkType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Labs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLabs(Lab lab)
        {
            base.AddObject("Labs", lab);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadValueCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadValueCategories(LeadValueCategory leadValueCategory)
        {
            base.AddObject("LeadValueCategories", leadValueCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Media EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedia(Medium medium)
        {
            base.AddObject("Media", medium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NoteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNoteTypes(NoteType noteType)
        {
            base.AddObject("NoteTypes", noteType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonToProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonToProperties(PersonToProperty personToProperty)
        {
            base.AddObject("PersonToProperties", personToProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyToCleanUpStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyToCleanUpStatus(PropertyToCleanUpStatu propertyToCleanUpStatu)
        {
            base.AddObject("PropertyToCleanUpStatus", propertyToCleanUpStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyToNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyToNotes(PropertyToNote propertyToNote)
        {
            base.AddObject("PropertyToNotes", propertyToNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questoinaires EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestoinaires(Questoinaire questoinaire)
        {
            base.AddObject("Questoinaires", questoinaire);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReleaseStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReleaseStatus(ReleaseStatu releaseStatu)
        {
            base.AddObject("ReleaseStatus", releaseStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Samples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamples(Sample sample)
        {
            base.AddObject("Samples", sample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SampleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSampleTypes(SampleType sampleType)
        {
            base.AddObject("SampleTypes", sampleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SeedTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeedTables(SeedTable seedTable)
        {
            base.AddObject("SeedTables", seedTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="ActionStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionStatu object.
        /// </summary>
        /// <param name="actionStatusID">Initial value of the ActionStatusID property.</param>
        /// <param name="actionStatus">Initial value of the ActionStatus property.</param>
        public static ActionStatu CreateActionStatu(global::System.Int32 actionStatusID, global::System.String actionStatus)
        {
            ActionStatu actionStatu = new ActionStatu();
            actionStatu.ActionStatusID = actionStatusID;
            actionStatu.ActionStatus = actionStatus;
            return actionStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionStatusID
        {
            get
            {
                return _ActionStatusID;
            }
            set
            {
                if (_ActionStatusID != value)
                {
                    OnActionStatusIDChanging(value);
                    ReportPropertyChanging("ActionStatusID");
                    _ActionStatusID = StructuralObject.SetValidValue(value, "ActionStatusID");
                    ReportPropertyChanged("ActionStatusID");
                    OnActionStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ActionStatusID;
        partial void OnActionStatusIDChanging(global::System.Int32 value);
        partial void OnActionStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionStatus
        {
            get
            {
                return _ActionStatus;
            }
            set
            {
                OnActionStatusChanging(value);
                ReportPropertyChanging("ActionStatus");
                _ActionStatus = StructuralObject.SetValidValue(value, false, "ActionStatus");
                ReportPropertyChanged("ActionStatus");
                OnActionStatusChanged();
            }
        }
        private global::System.String _ActionStatus;
        partial void OnActionStatusChanging(global::System.String value);
        partial void OnActionStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_ActionStatus", "PropertyToCleanUpStatus")]
        public EntityCollection<PropertyToCleanUpStatu> PropertyToCleanUpStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "PropertyToCleanUpStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "PropertyToCleanUpStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="BloodResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BloodResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BloodResult object.
        /// </summary>
        /// <param name="bloodResultsID">Initial value of the BloodResultsID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="sampleDate">Initial value of the SampleDate property.</param>
        public static BloodResult CreateBloodResult(global::System.Int32 bloodResultsID, global::System.Int32 personID, global::System.DateTime sampleDate)
        {
            BloodResult bloodResult = new BloodResult();
            bloodResult.BloodResultsID = bloodResultsID;
            bloodResult.PersonID = personID;
            bloodResult.SampleDate = sampleDate;
            return bloodResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodResultsID
        {
            get
            {
                return _BloodResultsID;
            }
            set
            {
                if (_BloodResultsID != value)
                {
                    OnBloodResultsIDChanging(value);
                    ReportPropertyChanging("BloodResultsID");
                    _BloodResultsID = StructuralObject.SetValidValue(value, "BloodResultsID");
                    ReportPropertyChanged("BloodResultsID");
                    OnBloodResultsIDChanged();
                }
            }
        }
        private global::System.Int32 _BloodResultsID;
        partial void OnBloodResultsIDChanging(global::System.Int32 value);
        partial void OnBloodResultsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SampleDate
        {
            get
            {
                return _SampleDate;
            }
            set
            {
                OnSampleDateChanging(value);
                ReportPropertyChanging("SampleDate");
                _SampleDate = StructuralObject.SetValidValue(value, "SampleDate");
                ReportPropertyChanged("SampleDate");
                OnSampleDateChanged();
            }
        }
        private global::System.DateTime _SampleDate;
        partial void OnSampleDateChanging(global::System.DateTime value);
        partial void OnSampleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadValue
        {
            get
            {
                return _LeadValue;
            }
            set
            {
                OnLeadValueChanging(value);
                ReportPropertyChanging("LeadValue");
                _LeadValue = StructuralObject.SetValidValue(value, "LeadValue");
                ReportPropertyChanged("LeadValue");
                OnLeadValueChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadValue;
        partial void OnLeadValueChanging(Nullable<global::System.Int32> value);
        partial void OnLeadValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadValueCategoryID
        {
            get
            {
                return _LeadValueCategoryID;
            }
            set
            {
                OnLeadValueCategoryIDChanging(value);
                ReportPropertyChanging("LeadValueCategoryID");
                _LeadValueCategoryID = StructuralObject.SetValidValue(value, "LeadValueCategoryID");
                ReportPropertyChanged("LeadValueCategoryID");
                OnLeadValueCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadValueCategoryID;
        partial void OnLeadValueCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadValueCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LabID
        {
            get
            {
                return _LabID;
            }
            set
            {
                OnLabIDChanging(value);
                ReportPropertyChanging("LabID");
                _LabID = StructuralObject.SetValidValue(value, "LabID");
                ReportPropertyChanged("LabID");
                OnLabIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LabID;
        partial void OnLabIDChanging(Nullable<global::System.Int32> value);
        partial void OnLabIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LabDate
        {
            get
            {
                return _LabDate;
            }
            set
            {
                OnLabDateChanging(value);
                ReportPropertyChanging("LabDate");
                _LabDate = StructuralObject.SetValidValue(value, "LabDate");
                ReportPropertyChanged("LabDate");
                OnLabDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LabDate;
        partial void OnLabDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLabDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value, "SampleID");
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleID;
        partial void OnSampleIDChanging(Nullable<global::System.Int32> value);
        partial void OnSampleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Lab", "Lab")]
        public Lab Lab
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lab>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "Lab").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lab>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "Lab").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lab> LabReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lab>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "Lab");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lab>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "Lab", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_LeadValueCategory", "LeadValueCategory")]
        public LeadValueCategory LeadValueCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadValueCategory>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "LeadValueCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadValueCategory>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "LeadValueCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadValueCategory> LeadValueCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadValueCategory>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "LeadValueCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadValueCategory>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "LeadValueCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Samples", "Samples")]
        public Sample Sample
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "Samples").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "Samples").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sample> SampleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sample>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "Samples");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sample>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "Samples", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_BloodResults_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_BloodResults_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_BloodResults_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("LeadTrackingProgram2Model.FK_BloodResults_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "BloodResultsToPerson", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.BloodResultsToPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.BloodResultsToPerson", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Classification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Classification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Classification object.
        /// </summary>
        /// <param name="classificationID">Initial value of the ClassificationID property.</param>
        /// <param name="classification1">Initial value of the Classification1 property.</param>
        public static Classification CreateClassification(global::System.Int32 classificationID, global::System.String classification1)
        {
            Classification classification = new Classification();
            classification.ClassificationID = classificationID;
            classification.Classification1 = classification1;
            return classification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                if (_ClassificationID != value)
                {
                    OnClassificationIDChanging(value);
                    ReportPropertyChanging("ClassificationID");
                    _ClassificationID = StructuralObject.SetValidValue(value, "ClassificationID");
                    ReportPropertyChanged("ClassificationID");
                    OnClassificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassificationID;
        partial void OnClassificationIDChanging(global::System.Int32 value);
        partial void OnClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Classification1
        {
            get
            {
                return _Classification1;
            }
            set
            {
                OnClassification1Changing(value);
                ReportPropertyChanging("Classification1");
                _Classification1 = StructuralObject.SetValidValue(value, false, "Classification1");
                ReportPropertyChanged("Classification1");
                OnClassification1Changed();
            }
        }
        private global::System.String _Classification1;
        partial void OnClassification1Changing(global::System.String value);
        partial void OnClassification1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Notes_Classification", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LeadTrackingProgram2Model.FK_Notes_Classification", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LeadTrackingProgram2Model.FK_Notes_Classification", "Notes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="CleanUpStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CleanUpStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CleanUpStatu object.
        /// </summary>
        /// <param name="cleanUpStatusID">Initial value of the CleanUpStatusID property.</param>
        /// <param name="cleanUpStatus">Initial value of the CleanUpStatus property.</param>
        public static CleanUpStatu CreateCleanUpStatu(global::System.Int32 cleanUpStatusID, global::System.String cleanUpStatus)
        {
            CleanUpStatu cleanUpStatu = new CleanUpStatu();
            cleanUpStatu.CleanUpStatusID = cleanUpStatusID;
            cleanUpStatu.CleanUpStatus = cleanUpStatus;
            return cleanUpStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CleanUpStatusID
        {
            get
            {
                return _CleanUpStatusID;
            }
            set
            {
                if (_CleanUpStatusID != value)
                {
                    OnCleanUpStatusIDChanging(value);
                    ReportPropertyChanging("CleanUpStatusID");
                    _CleanUpStatusID = StructuralObject.SetValidValue(value, "CleanUpStatusID");
                    ReportPropertyChanged("CleanUpStatusID");
                    OnCleanUpStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _CleanUpStatusID;
        partial void OnCleanUpStatusIDChanging(global::System.Int32 value);
        partial void OnCleanUpStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CleanUpStatus
        {
            get
            {
                return _CleanUpStatus;
            }
            set
            {
                OnCleanUpStatusChanging(value);
                ReportPropertyChanging("CleanUpStatus");
                _CleanUpStatus = StructuralObject.SetValidValue(value, false, "CleanUpStatus");
                ReportPropertyChanged("CleanUpStatus");
                OnCleanUpStatusChanged();
            }
        }
        private global::System.String _CleanUpStatus;
        partial void OnCleanUpStatusChanging(global::System.String value);
        partial void OnCleanUpStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_CleanUpStatus", "PropertyToCleanUpStatus")]
        public EntityCollection<PropertyToCleanUpStatu> PropertyToCleanUpStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "PropertyToCleanUpStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "PropertyToCleanUpStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="ConstructionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConstructionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConstructionType object.
        /// </summary>
        /// <param name="constructionTypeID">Initial value of the ConstructionTypeID property.</param>
        public static ConstructionType CreateConstructionType(global::System.Int32 constructionTypeID)
        {
            ConstructionType constructionType = new ConstructionType();
            constructionType.ConstructionTypeID = constructionTypeID;
            return constructionType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConstructionTypeID
        {
            get
            {
                return _ConstructionTypeID;
            }
            set
            {
                if (_ConstructionTypeID != value)
                {
                    OnConstructionTypeIDChanging(value);
                    ReportPropertyChanging("ConstructionTypeID");
                    _ConstructionTypeID = StructuralObject.SetValidValue(value, "ConstructionTypeID");
                    ReportPropertyChanged("ConstructionTypeID");
                    OnConstructionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ConstructionTypeID;
        partial void OnConstructionTypeIDChanging(global::System.Int32 value);
        partial void OnConstructionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConstructionType1
        {
            get
            {
                return _ConstructionType1;
            }
            set
            {
                OnConstructionType1Changing(value);
                ReportPropertyChanging("ConstructionType1");
                _ConstructionType1 = StructuralObject.SetValidValue(value, true, "ConstructionType1");
                ReportPropertyChanged("ConstructionType1");
                OnConstructionType1Changed();
            }
        }
        private global::System.String _ConstructionType1;
        partial void OnConstructionType1Changing(global::System.String value);
        partial void OnConstructionType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Property_ConstructionType", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Family")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Family : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Family object.
        /// </summary>
        /// <param name="familyID">Initial value of the FamilyID property.</param>
        /// <param name="familyLastName">Initial value of the FamilyLastName property.</param>
        public static Family CreateFamily(global::System.Int32 familyID, global::System.String familyLastName)
        {
            Family family = new Family();
            family.FamilyID = familyID;
            family.FamilyLastName = familyLastName;
            return family;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamilyID
        {
            get
            {
                return _FamilyID;
            }
            set
            {
                if (_FamilyID != value)
                {
                    OnFamilyIDChanging(value);
                    ReportPropertyChanging("FamilyID");
                    _FamilyID = StructuralObject.SetValidValue(value, "FamilyID");
                    ReportPropertyChanged("FamilyID");
                    OnFamilyIDChanged();
                }
            }
        }
        private global::System.Int32 _FamilyID;
        partial void OnFamilyIDChanging(global::System.Int32 value);
        partial void OnFamilyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FamilyLastName
        {
            get
            {
                return _FamilyLastName;
            }
            set
            {
                OnFamilyLastNameChanging(value);
                ReportPropertyChanging("FamilyLastName");
                _FamilyLastName = StructuralObject.SetValidValue(value, false, "FamilyLastName");
                ReportPropertyChanged("FamilyLastName");
                OnFamilyLastNameChanged();
            }
        }
        private global::System.String _FamilyLastName;
        partial void OnFamilyLastNameChanging(global::System.String value);
        partial void OnFamilyLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> NumberofSmokers
        {
            get
            {
                return _NumberofSmokers;
            }
            set
            {
                OnNumberofSmokersChanging(value);
                ReportPropertyChanging("NumberofSmokers");
                _NumberofSmokers = StructuralObject.SetValidValue(value, "NumberofSmokers");
                ReportPropertyChanged("NumberofSmokers");
                OnNumberofSmokersChanged();
            }
        }
        private Nullable<global::System.Byte> _NumberofSmokers;
        partial void OnNumberofSmokersChanging(Nullable<global::System.Byte> value);
        partial void OnNumberofSmokersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LeadDishware
        {
            get
            {
                return _LeadDishware;
            }
            set
            {
                OnLeadDishwareChanging(value);
                ReportPropertyChanging("LeadDishware");
                _LeadDishware = StructuralObject.SetValidValue(value, "LeadDishware");
                ReportPropertyChanged("LeadDishware");
                OnLeadDishwareChanged();
            }
        }
        private Nullable<global::System.Boolean> _LeadDishware;
        partial void OnLeadDishwareChanging(Nullable<global::System.Boolean> value);
        partial void OnLeadDishwareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> InOutPets
        {
            get
            {
                return _InOutPets;
            }
            set
            {
                OnInOutPetsChanging(value);
                ReportPropertyChanging("InOutPets");
                _InOutPets = StructuralObject.SetValidValue(value, "InOutPets");
                ReportPropertyChanged("InOutPets");
                OnInOutPetsChanged();
            }
        }
        private Nullable<global::System.Byte> _InOutPets;
        partial void OnInOutPetsChanging(Nullable<global::System.Byte> value);
        partial void OnInOutPetsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryLanguageID
        {
            get
            {
                return _PrimaryLanguageID;
            }
            set
            {
                OnPrimaryLanguageIDChanging(value);
                ReportPropertyChanging("PrimaryLanguageID");
                _PrimaryLanguageID = StructuralObject.SetValidValue(value, "PrimaryLanguageID");
                ReportPropertyChanged("PrimaryLanguageID");
                OnPrimaryLanguageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryLanguageID;
        partial void OnPrimaryLanguageIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NotesID
        {
            get
            {
                return _NotesID;
            }
            set
            {
                OnNotesIDChanging(value);
                ReportPropertyChanging("NotesID");
                _NotesID = StructuralObject.SetValidValue(value, "NotesID");
                ReportPropertyChanged("NotesID");
                OnNotesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _NotesID;
        partial void OnNotesIDChanging(Nullable<global::System.Int32> value);
        partial void OnNotesIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Family_PrimaryLanguage", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FamilyToLanguage", "Language")]
        public EntityCollection<Language> Languages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Language>("LeadTrackingProgram2Model.FamilyToLanguage", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Language>("LeadTrackingProgram2Model.FamilyToLanguage", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FamilyToNotes", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LeadTrackingProgram2Model.FamilyToNotes", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LeadTrackingProgram2Model.FamilyToNotes", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToFamily", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToFamily", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToFamily", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="FPLinkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FPLinkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FPLinkType object.
        /// </summary>
        /// <param name="fPLinkTypeID">Initial value of the FPLinkTypeID property.</param>
        /// <param name="fPLinkType1">Initial value of the FPLinkType1 property.</param>
        public static FPLinkType CreateFPLinkType(global::System.Int32 fPLinkTypeID, global::System.String fPLinkType1)
        {
            FPLinkType fPLinkType = new FPLinkType();
            fPLinkType.FPLinkTypeID = fPLinkTypeID;
            fPLinkType.FPLinkType1 = fPLinkType1;
            return fPLinkType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FPLinkTypeID
        {
            get
            {
                return _FPLinkTypeID;
            }
            set
            {
                if (_FPLinkTypeID != value)
                {
                    OnFPLinkTypeIDChanging(value);
                    ReportPropertyChanging("FPLinkTypeID");
                    _FPLinkTypeID = StructuralObject.SetValidValue(value, "FPLinkTypeID");
                    ReportPropertyChanged("FPLinkTypeID");
                    OnFPLinkTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FPLinkTypeID;
        partial void OnFPLinkTypeIDChanging(global::System.Int32 value);
        partial void OnFPLinkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FPLinkType1
        {
            get
            {
                return _FPLinkType1;
            }
            set
            {
                OnFPLinkType1Changing(value);
                ReportPropertyChanging("FPLinkType1");
                _FPLinkType1 = StructuralObject.SetValidValue(value, false, "FPLinkType1");
                ReportPropertyChanged("FPLinkType1");
                OnFPLinkType1Changed();
            }
        }
        private global::System.String _FPLinkType1;
        partial void OnFPLinkType1Changing(global::System.String value);
        partial void OnFPLinkType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_FPLinkType", "PersonToProperty")]
        public EntityCollection<PersonToProperty> PersonToProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "PersonToProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "PersonToProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Lab")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lab : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lab object.
        /// </summary>
        /// <param name="labID">Initial value of the LabID property.</param>
        /// <param name="labName">Initial value of the labName property.</param>
        public static Lab CreateLab(global::System.Int32 labID, global::System.String labName)
        {
            Lab lab = new Lab();
            lab.LabID = labID;
            lab.labName = labName;
            return lab;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LabID
        {
            get
            {
                return _LabID;
            }
            set
            {
                if (_LabID != value)
                {
                    OnLabIDChanging(value);
                    ReportPropertyChanging("LabID");
                    _LabID = StructuralObject.SetValidValue(value, "LabID");
                    ReportPropertyChanged("LabID");
                    OnLabIDChanged();
                }
            }
        }
        private global::System.Int32 _LabID;
        partial void OnLabIDChanging(global::System.Int32 value);
        partial void OnLabIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String labName
        {
            get
            {
                return _labName;
            }
            set
            {
                OnlabNameChanging(value);
                ReportPropertyChanging("labName");
                _labName = StructuralObject.SetValidValue(value, false, "labName");
                ReportPropertyChanged("labName");
                OnlabNameChanged();
            }
        }
        private global::System.String _labName;
        partial void OnlabNameChanging(global::System.String value);
        partial void OnlabNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, true, "HouseNumber");
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, true, "Apartment");
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> YearOpen
        {
            get
            {
                return _YearOpen;
            }
            set
            {
                OnYearOpenChanging(value);
                ReportPropertyChanging("YearOpen");
                _YearOpen = StructuralObject.SetValidValue(value, "YearOpen");
                ReportPropertyChanged("YearOpen");
                OnYearOpenChanged();
            }
        }
        private Nullable<global::System.DateTime> _YearOpen;
        partial void OnYearOpenChanging(Nullable<global::System.DateTime> value);
        partial void OnYearOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> YearClosed
        {
            get
            {
                return _YearClosed;
            }
            set
            {
                OnYearClosedChanging(value);
                ReportPropertyChanging("YearClosed");
                _YearClosed = StructuralObject.SetValidValue(value, "YearClosed");
                ReportPropertyChanged("YearClosed");
                OnYearClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _YearClosed;
        partial void OnYearClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnYearClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Lab", "BloodResults")]
        public EntityCollection<BloodResult> BloodResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "BloodResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Lab", "BloodResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Language CreateLanguage(global::System.Int32 languageID, global::System.String name)
        {
            Language language = new Language();
            language.LanguageID = languageID;
            language.Name = name;
            return language;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value, "LanguageID");
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Family_PrimaryLanguage", "Family")]
        public EntityCollection<Family> Families
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("LeadTrackingProgram2Model.FK_Family_PrimaryLanguage", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_PrimaryLanguage", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FamilyToLanguage", "Family")]
        public EntityCollection<Family> Families1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("LeadTrackingProgram2Model.FamilyToLanguage", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("LeadTrackingProgram2Model.FamilyToLanguage", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToLanguage", "Person")]
        public EntityCollection<Person> People1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToLanguage", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToLanguage", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="LeadValueCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadValueCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadValueCategory object.
        /// </summary>
        /// <param name="leadValueCategoryID">Initial value of the LeadValueCategoryID property.</param>
        /// <param name="leadValueCategory1">Initial value of the LeadValueCategory1 property.</param>
        public static LeadValueCategory CreateLeadValueCategory(global::System.Int32 leadValueCategoryID, global::System.String leadValueCategory1)
        {
            LeadValueCategory leadValueCategory = new LeadValueCategory();
            leadValueCategory.LeadValueCategoryID = leadValueCategoryID;
            leadValueCategory.LeadValueCategory1 = leadValueCategory1;
            return leadValueCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadValueCategoryID
        {
            get
            {
                return _LeadValueCategoryID;
            }
            set
            {
                if (_LeadValueCategoryID != value)
                {
                    OnLeadValueCategoryIDChanging(value);
                    ReportPropertyChanging("LeadValueCategoryID");
                    _LeadValueCategoryID = StructuralObject.SetValidValue(value, "LeadValueCategoryID");
                    ReportPropertyChanged("LeadValueCategoryID");
                    OnLeadValueCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _LeadValueCategoryID;
        partial void OnLeadValueCategoryIDChanging(global::System.Int32 value);
        partial void OnLeadValueCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeadValueCategory1
        {
            get
            {
                return _LeadValueCategory1;
            }
            set
            {
                OnLeadValueCategory1Changing(value);
                ReportPropertyChanging("LeadValueCategory1");
                _LeadValueCategory1 = StructuralObject.SetValidValue(value, false, "LeadValueCategory1");
                ReportPropertyChanged("LeadValueCategory1");
                OnLeadValueCategory1Changed();
            }
        }
        private global::System.String _LeadValueCategory1;
        partial void OnLeadValueCategory1Changing(global::System.String value);
        partial void OnLeadValueCategory1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_LeadValueCategory", "BloodResults")]
        public EntityCollection<BloodResult> BloodResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "BloodResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_LeadValueCategory", "BloodResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Medium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medium object.
        /// </summary>
        /// <param name="mediumID">Initial value of the MediumID property.</param>
        /// <param name="medium1">Initial value of the Medium1 property.</param>
        public static Medium CreateMedium(global::System.Int32 mediumID, global::System.String medium1)
        {
            Medium medium = new Medium();
            medium.MediumID = mediumID;
            medium.Medium1 = medium1;
            return medium;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediumID
        {
            get
            {
                return _MediumID;
            }
            set
            {
                if (_MediumID != value)
                {
                    OnMediumIDChanging(value);
                    ReportPropertyChanging("MediumID");
                    _MediumID = StructuralObject.SetValidValue(value, "MediumID");
                    ReportPropertyChanged("MediumID");
                    OnMediumIDChanged();
                }
            }
        }
        private global::System.Int32 _MediumID;
        partial void OnMediumIDChanging(global::System.Int32 value);
        partial void OnMediumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Medium1
        {
            get
            {
                return _Medium1;
            }
            set
            {
                OnMedium1Changing(value);
                ReportPropertyChanging("Medium1");
                _Medium1 = StructuralObject.SetValidValue(value, false, "Medium1");
                ReportPropertyChanged("Medium1");
                OnMedium1Changed();
            }
        }
        private global::System.String _Medium1;
        partial void OnMedium1Changing(global::System.String value);
        partial void OnMedium1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Medium", "PropertyToCleanUpStatus")]
        public EntityCollection<PropertyToCleanUpStatu> PropertyToCleanUpStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "PropertyToCleanUpStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "PropertyToCleanUpStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_Medium", "Samples")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_Medium", "Samples");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_Medium", "Samples", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="notesID">Initial value of the NotesID property.</param>
        /// <param name="note1">Initial value of the Note1 property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="classificationID">Initial value of the ClassificationID property.</param>
        /// <param name="noteTypeID">Initial value of the NoteTypeID property.</param>
        public static Note CreateNote(global::System.Int32 notesID, global::System.String note1, global::System.Int32 entityID, global::System.Int32 classificationID, global::System.Int32 noteTypeID)
        {
            Note note = new Note();
            note.NotesID = notesID;
            note.Note1 = note1;
            note.EntityID = entityID;
            note.ClassificationID = classificationID;
            note.NoteTypeID = noteTypeID;
            return note;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotesID
        {
            get
            {
                return _NotesID;
            }
            set
            {
                if (_NotesID != value)
                {
                    OnNotesIDChanging(value);
                    ReportPropertyChanging("NotesID");
                    _NotesID = StructuralObject.SetValidValue(value, "NotesID");
                    ReportPropertyChanged("NotesID");
                    OnNotesIDChanged();
                }
            }
        }
        private global::System.Int32 _NotesID;
        partial void OnNotesIDChanging(global::System.Int32 value);
        partial void OnNotesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note1
        {
            get
            {
                return _Note1;
            }
            set
            {
                OnNote1Changing(value);
                ReportPropertyChanging("Note1");
                _Note1 = StructuralObject.SetValidValue(value, false, "Note1");
                ReportPropertyChanged("Note1");
                OnNote1Changed();
            }
        }
        private global::System.String _Note1;
        partial void OnNote1Changing(global::System.String value);
        partial void OnNote1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value, "EntityID");
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                OnClassificationIDChanging(value);
                ReportPropertyChanging("ClassificationID");
                _ClassificationID = StructuralObject.SetValidValue(value, "ClassificationID");
                ReportPropertyChanged("ClassificationID");
                OnClassificationIDChanged();
            }
        }
        private global::System.Int32 _ClassificationID;
        partial void OnClassificationIDChanging(global::System.Int32 value);
        partial void OnClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteTypeID
        {
            get
            {
                return _NoteTypeID;
            }
            set
            {
                OnNoteTypeIDChanging(value);
                ReportPropertyChanging("NoteTypeID");
                _NoteTypeID = StructuralObject.SetValidValue(value, "NoteTypeID");
                ReportPropertyChanged("NoteTypeID");
                OnNoteTypeIDChanged();
            }
        }
        private global::System.Int32 _NoteTypeID;
        partial void OnNoteTypeIDChanging(global::System.Int32 value);
        partial void OnNoteTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Notes_Classification", "Classification")]
        public Classification Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("LeadTrackingProgram2Model.FK_Notes_Classification", "Classification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("LeadTrackingProgram2Model.FK_Notes_Classification", "Classification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Classification> ClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("LeadTrackingProgram2Model.FK_Notes_Classification", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Classification>("LeadTrackingProgram2Model.FK_Notes_Classification", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Notes_NoteType", "NoteType")]
        public NoteType NoteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteType>("LeadTrackingProgram2Model.FK_Notes_NoteType", "NoteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteType>("LeadTrackingProgram2Model.FK_Notes_NoteType", "NoteType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NoteType> NoteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteType>("LeadTrackingProgram2Model.FK_Notes_NoteType", "NoteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NoteType>("LeadTrackingProgram2Model.FK_Notes_NoteType", "NoteType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Notes", "PropertyToNotes")]
        public EntityCollection<PropertyToNote> PropertyToNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToNote>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "PropertyToNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToNote>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "PropertyToNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FamilyToNotes", "Family")]
        public EntityCollection<Family> Families
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("LeadTrackingProgram2Model.FamilyToNotes", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("LeadTrackingProgram2Model.FamilyToNotes", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToNotes", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToNotes", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToNotes", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="NoteType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoteType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NoteType object.
        /// </summary>
        /// <param name="noteTypeID">Initial value of the NoteTypeID property.</param>
        /// <param name="noteType1">Initial value of the NoteType1 property.</param>
        public static NoteType CreateNoteType(global::System.Int32 noteTypeID, global::System.String noteType1)
        {
            NoteType noteType = new NoteType();
            noteType.NoteTypeID = noteTypeID;
            noteType.NoteType1 = noteType1;
            return noteType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteTypeID
        {
            get
            {
                return _NoteTypeID;
            }
            set
            {
                if (_NoteTypeID != value)
                {
                    OnNoteTypeIDChanging(value);
                    ReportPropertyChanging("NoteTypeID");
                    _NoteTypeID = StructuralObject.SetValidValue(value, "NoteTypeID");
                    ReportPropertyChanged("NoteTypeID");
                    OnNoteTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteTypeID;
        partial void OnNoteTypeIDChanging(global::System.Int32 value);
        partial void OnNoteTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoteType1
        {
            get
            {
                return _NoteType1;
            }
            set
            {
                OnNoteType1Changing(value);
                ReportPropertyChanging("NoteType1");
                _NoteType1 = StructuralObject.SetValidValue(value, false, "NoteType1");
                ReportPropertyChanged("NoteType1");
                OnNoteType1Changed();
            }
        }
        private global::System.String _NoteType1;
        partial void OnNoteType1Changing(global::System.String value);
        partial void OnNoteType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Notes_NoteType", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LeadTrackingProgram2Model.FK_Notes_NoteType", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LeadTrackingProgram2Model.FK_Notes_NoteType", "Notes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String firstName, global::System.String lastName)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.FirstName = firstName;
            person.LastName = lastName;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryLanguageID
        {
            get
            {
                return _PrimaryLanguageID;
            }
            set
            {
                OnPrimaryLanguageIDChanging(value);
                ReportPropertyChanging("PrimaryLanguageID");
                _PrimaryLanguageID = StructuralObject.SetValidValue(value, "PrimaryLanguageID");
                ReportPropertyChanged("PrimaryLanguageID");
                OnPrimaryLanguageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryLanguageID;
        partial void OnPrimaryLanguageIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReleaseStatusID
        {
            get
            {
                return _ReleaseStatusID;
            }
            set
            {
                OnReleaseStatusIDChanging(value);
                ReportPropertyChanging("ReleaseStatusID");
                _ReleaseStatusID = StructuralObject.SetValidValue(value, "ReleaseStatusID");
                ReportPropertyChanged("ReleaseStatusID");
                OnReleaseStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReleaseStatusID;
        partial void OnReleaseStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnReleaseStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_PrimaryLanguage", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("LeadTrackingProgram2Model.FK_Person_PrimaryLanguage", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_ReleaseStatus", "ReleaseStatus")]
        public ReleaseStatu ReleaseStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleaseStatu>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "ReleaseStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleaseStatu>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "ReleaseStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReleaseStatu> ReleaseStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleaseStatu>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "ReleaseStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReleaseStatu>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "ReleaseStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_Person_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_Person_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("LeadTrackingProgram2Model.FK_Person_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("LeadTrackingProgram2Model.FK_Person_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Person", "PersonToProperty")]
        public EntityCollection<PersonToProperty> PersonToProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "PersonToProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "PersonToProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "BloodResultsToPerson", "BloodResults")]
        public EntityCollection<BloodResult> BloodResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodResult>("LeadTrackingProgram2Model.BloodResultsToPerson", "BloodResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodResult>("LeadTrackingProgram2Model.BloodResultsToPerson", "BloodResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToFamily", "Family")]
        public EntityCollection<Family> Families
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("LeadTrackingProgram2Model.PersonToFamily", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("LeadTrackingProgram2Model.PersonToFamily", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToLanguage", "Language")]
        public EntityCollection<Language> Languages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Language>("LeadTrackingProgram2Model.PersonToLanguage", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Language>("LeadTrackingProgram2Model.PersonToLanguage", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToNotes", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("LeadTrackingProgram2Model.PersonToNotes", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("LeadTrackingProgram2Model.PersonToNotes", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToQuestionaire", "Questoinaire")]
        public EntityCollection<Questoinaire> Questoinaires
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questoinaire>("LeadTrackingProgram2Model.PersonToQuestionaire", "Questoinaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questoinaire>("LeadTrackingProgram2Model.PersonToQuestionaire", "Questoinaire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="PersonToProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonToProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonToProperty object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static PersonToProperty CreatePersonToProperty(global::System.Int32 personID, global::System.Int32 propertyID)
        {
            PersonToProperty personToProperty = new PersonToProperty();
            personToProperty.PersonID = personID;
            personToProperty.PropertyID = propertyID;
            return personToProperty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value, "PropertyID");
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MoveInDate
        {
            get
            {
                return _MoveInDate;
            }
            set
            {
                OnMoveInDateChanging(value);
                ReportPropertyChanging("MoveInDate");
                _MoveInDate = StructuralObject.SetValidValue(value, "MoveInDate");
                ReportPropertyChanged("MoveInDate");
                OnMoveInDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MoveInDate;
        partial void OnMoveInDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMoveInDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MoveOutDate
        {
            get
            {
                return _MoveOutDate;
            }
            set
            {
                OnMoveOutDateChanging(value);
                ReportPropertyChanging("MoveOutDate");
                _MoveOutDate = StructuralObject.SetValidValue(value, "MoveOutDate");
                ReportPropertyChanged("MoveOutDate");
                OnMoveOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MoveOutDate;
        partial void OnMoveOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMoveOutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FPLinkTypeID
        {
            get
            {
                return _FPLinkTypeID;
            }
            set
            {
                OnFPLinkTypeIDChanging(value);
                ReportPropertyChanging("FPLinkTypeID");
                _FPLinkTypeID = StructuralObject.SetValidValue(value, "FPLinkTypeID");
                ReportPropertyChanged("FPLinkTypeID");
                OnFPLinkTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FPLinkTypeID;
        partial void OnFPLinkTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnFPLinkTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_FPLinkType", "FPLinkType")]
        public FPLinkType FPLinkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FPLinkType>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "FPLinkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FPLinkType>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "FPLinkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FPLinkType> FPLinkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FPLinkType>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "FPLinkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FPLinkType>("LeadTrackingProgram2Model.FK_PersonToProperty_FPLinkType", "FPLinkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("LeadTrackingProgram2Model.FK_PersonToProperty_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static Property CreateProperty(global::System.Int32 propertyID)
        {
            Property property = new Property();
            property.PropertyID = propertyID;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value, "PropertyID");
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, true, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, true, "HouseNumber");
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Apartment
        {
            get
            {
                return _Apartment;
            }
            set
            {
                OnApartmentChanging(value);
                ReportPropertyChanging("Apartment");
                _Apartment = StructuralObject.SetValidValue(value, true, "Apartment");
                ReportPropertyChanged("Apartment");
                OnApartmentChanged();
            }
        }
        private global::System.String _Apartment;
        partial void OnApartmentChanging(global::System.String value);
        partial void OnApartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearBuilt
        {
            get
            {
                return _YearBuilt;
            }
            set
            {
                OnYearBuiltChanging(value);
                ReportPropertyChanging("YearBuilt");
                _YearBuilt = StructuralObject.SetValidValue(value, "YearBuilt");
                ReportPropertyChanged("YearBuilt");
                OnYearBuiltChanged();
            }
        }
        private Nullable<global::System.Int32> _YearBuilt;
        partial void OnYearBuiltChanging(Nullable<global::System.Int32> value);
        partial void OnYearBuiltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CleanUpStatusID
        {
            get
            {
                return _CleanUpStatusID;
            }
            set
            {
                OnCleanUpStatusIDChanging(value);
                ReportPropertyChanging("CleanUpStatusID");
                _CleanUpStatusID = StructuralObject.SetValidValue(value, "CleanUpStatusID");
                ReportPropertyChanged("CleanUpStatusID");
                OnCleanUpStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CleanUpStatusID;
        partial void OnCleanUpStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnCleanUpStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ConstructionTypeID
        {
            get
            {
                return _ConstructionTypeID;
            }
            set
            {
                OnConstructionTypeIDChanging(value);
                ReportPropertyChanging("ConstructionTypeID");
                _ConstructionTypeID = StructuralObject.SetValidValue(value, "ConstructionTypeID");
                ReportPropertyChanged("ConstructionTypeID");
                OnConstructionTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ConstructionTypeID;
        partial void OnConstructionTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnConstructionTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Property_ConstructionType", "ConstructionType")]
        public ConstructionType ConstructionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConstructionType>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "ConstructionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConstructionType>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "ConstructionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConstructionType> ConstructionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConstructionType>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "ConstructionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConstructionType>("LeadTrackingProgram2Model.FK_Property_ConstructionType", "ConstructionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PersonToProperty_Property", "PersonToProperty")]
        public EntityCollection<PersonToProperty> PersonToProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "PersonToProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonToProperty>("LeadTrackingProgram2Model.FK_PersonToProperty_Property", "PersonToProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Property_Property", "Property1")]
        public Property Property1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> Property1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Property_Property", "Property")]
        public Property Property2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> Property2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_Property_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Property", "PropertyToCleanUpStatus")]
        public EntityCollection<PropertyToCleanUpStatu> PropertyToCleanUpStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "PropertyToCleanUpStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToCleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "PropertyToCleanUpStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Property", "PropertyToNotes")]
        public EntityCollection<PropertyToNote> PropertyToNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyToNote>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "PropertyToNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyToNote>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "PropertyToNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Questoinaire_Property", "Questoinaire")]
        public EntityCollection<Questoinaire> Questoinaires
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questoinaire>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Questoinaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questoinaire>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Questoinaire", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_Property", "Samples")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_Property", "Samples");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_Property", "Samples", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="PropertyToCleanUpStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyToCleanUpStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyToCleanUpStatu object.
        /// </summary>
        /// <param name="cleanUpStatusID">Initial value of the CleanUpStatusID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static PropertyToCleanUpStatu CreatePropertyToCleanUpStatu(global::System.Int32 cleanUpStatusID, global::System.Int32 propertyID, global::System.DateTime startDate)
        {
            PropertyToCleanUpStatu propertyToCleanUpStatu = new PropertyToCleanUpStatu();
            propertyToCleanUpStatu.CleanUpStatusID = cleanUpStatusID;
            propertyToCleanUpStatu.PropertyID = propertyID;
            propertyToCleanUpStatu.StartDate = startDate;
            return propertyToCleanUpStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CleanUpStatusID
        {
            get
            {
                return _CleanUpStatusID;
            }
            set
            {
                if (_CleanUpStatusID != value)
                {
                    OnCleanUpStatusIDChanging(value);
                    ReportPropertyChanging("CleanUpStatusID");
                    _CleanUpStatusID = StructuralObject.SetValidValue(value, "CleanUpStatusID");
                    ReportPropertyChanged("CleanUpStatusID");
                    OnCleanUpStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _CleanUpStatusID;
        partial void OnCleanUpStatusIDChanging(global::System.Int32 value);
        partial void OnCleanUpStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value, "PropertyID");
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompleteDate
        {
            get
            {
                return _CompleteDate;
            }
            set
            {
                OnCompleteDateChanging(value);
                ReportPropertyChanging("CompleteDate");
                _CompleteDate = StructuralObject.SetValidValue(value, "CompleteDate");
                ReportPropertyChanged("CompleteDate");
                OnCompleteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompleteDate;
        partial void OnCompleteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompleteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Clearance
        {
            get
            {
                return _Clearance;
            }
            set
            {
                OnClearanceChanging(value);
                ReportPropertyChanging("Clearance");
                _Clearance = StructuralObject.SetValidValue(value, true, "Clearance");
                ReportPropertyChanged("Clearance");
                OnClearanceChanged();
            }
        }
        private global::System.String _Clearance;
        partial void OnClearanceChanging(global::System.String value);
        partial void OnClearanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActionStatusID
        {
            get
            {
                return _ActionStatusID;
            }
            set
            {
                OnActionStatusIDChanging(value);
                ReportPropertyChanging("ActionStatusID");
                _ActionStatusID = StructuralObject.SetValidValue(value, "ActionStatusID");
                ReportPropertyChanged("ActionStatusID");
                OnActionStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActionStatusID;
        partial void OnActionStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnActionStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActionStatusDate
        {
            get
            {
                return _ActionStatusDate;
            }
            set
            {
                OnActionStatusDateChanging(value);
                ReportPropertyChanging("ActionStatusDate");
                _ActionStatusDate = StructuralObject.SetValidValue(value, "ActionStatusDate");
                ReportPropertyChanged("ActionStatusDate");
                OnActionStatusDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActionStatusDate;
        partial void OnActionStatusDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActionStatusDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MediumID
        {
            get
            {
                return _MediumID;
            }
            set
            {
                OnMediumIDChanging(value);
                ReportPropertyChanging("MediumID");
                _MediumID = StructuralObject.SetValidValue(value, "MediumID");
                ReportPropertyChanged("MediumID");
                OnMediumIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MediumID;
        partial void OnMediumIDChanging(Nullable<global::System.Int32> value);
        partial void OnMediumIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus")]
        public ActionStatu ActionStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionStatu> ActionStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_ActionStatus", "ActionStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus")]
        public CleanUpStatu CleanUpStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CleanUpStatu> CleanUpStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CleanUpStatu>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_CleanUpStatus", "CleanUpStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Medium", "Medium")]
        public Medium Medium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "Medium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "Medium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medium> MediumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "Medium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medium>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Medium", "Medium", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToCleanUpStatus_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToCleanUpStatus_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="PropertyToNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyToNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyToNote object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        /// <param name="notesID">Initial value of the NotesID property.</param>
        /// <param name="noteDate">Initial value of the NoteDate property.</param>
        public static PropertyToNote CreatePropertyToNote(global::System.Int32 propertyID, global::System.Int32 notesID, global::System.DateTime noteDate)
        {
            PropertyToNote propertyToNote = new PropertyToNote();
            propertyToNote.PropertyID = propertyID;
            propertyToNote.NotesID = notesID;
            propertyToNote.NoteDate = noteDate;
            return propertyToNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value, "PropertyID");
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotesID
        {
            get
            {
                return _NotesID;
            }
            set
            {
                if (_NotesID != value)
                {
                    OnNotesIDChanging(value);
                    ReportPropertyChanging("NotesID");
                    _NotesID = StructuralObject.SetValidValue(value, "NotesID");
                    ReportPropertyChanged("NotesID");
                    OnNotesIDChanged();
                }
            }
        }
        private global::System.Int32 _NotesID;
        partial void OnNotesIDChanging(global::System.Int32 value);
        partial void OnNotesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NoteDate
        {
            get
            {
                return _NoteDate;
            }
            set
            {
                OnNoteDateChanging(value);
                ReportPropertyChanging("NoteDate");
                _NoteDate = StructuralObject.SetValidValue(value, "NoteDate");
                ReportPropertyChanged("NoteDate");
                OnNoteDateChanged();
            }
        }
        private global::System.DateTime _NoteDate;
        partial void OnNoteDateChanging(global::System.DateTime value);
        partial void OnNoteDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Notes", "Notes")]
        public Note Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "Notes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "Notes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Note> NoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Note>("LeadTrackingProgram2Model.FK_PropertyToNotes_Notes", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_PropertyToNotes_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_PropertyToNotes_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Questoinaire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questoinaire : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Questoinaire object.
        /// </summary>
        /// <param name="questionaireID">Initial value of the QuestionaireID property.</param>
        public static Questoinaire CreateQuestoinaire(global::System.Int32 questionaireID)
        {
            Questoinaire questoinaire = new Questoinaire();
            questoinaire.QuestionaireID = questionaireID;
            return questoinaire;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionaireID
        {
            get
            {
                return _QuestionaireID;
            }
            set
            {
                if (_QuestionaireID != value)
                {
                    OnQuestionaireIDChanging(value);
                    ReportPropertyChanging("QuestionaireID");
                    _QuestionaireID = StructuralObject.SetValidValue(value, "QuestionaireID");
                    ReportPropertyChanged("QuestionaireID");
                    OnQuestionaireIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionaireID;
        partial void OnQuestionaireIDChanging(global::System.Int32 value);
        partial void OnQuestionaireIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdministered
        {
            get
            {
                return _DateAdministered;
            }
            set
            {
                OnDateAdministeredChanging(value);
                ReportPropertyChanging("DateAdministered");
                _DateAdministered = StructuralObject.SetValidValue(value, "DateAdministered");
                ReportPropertyChanged("DateAdministered");
                OnDateAdministeredChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdministered;
        partial void OnDateAdministeredChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAdministeredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true, "Source");
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MouthingIndex
        {
            get
            {
                return _MouthingIndex;
            }
            set
            {
                OnMouthingIndexChanging(value);
                ReportPropertyChanging("MouthingIndex");
                _MouthingIndex = StructuralObject.SetValidValue(value, "MouthingIndex");
                ReportPropertyChanged("MouthingIndex");
                OnMouthingIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _MouthingIndex;
        partial void OnMouthingIndexChanging(Nullable<global::System.Int32> value);
        partial void OnMouthingIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Nursing
        {
            get
            {
                return _Nursing;
            }
            set
            {
                OnNursingChanging(value);
                ReportPropertyChanging("Nursing");
                _Nursing = StructuralObject.SetValidValue(value, "Nursing");
                ReportPropertyChanged("Nursing");
                OnNursingChanged();
            }
        }
        private Nullable<global::System.Boolean> _Nursing;
        partial void OnNursingChanging(Nullable<global::System.Boolean> value);
        partial void OnNursingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Pacifier
        {
            get
            {
                return _Pacifier;
            }
            set
            {
                OnPacifierChanging(value);
                ReportPropertyChanging("Pacifier");
                _Pacifier = StructuralObject.SetValidValue(value, "Pacifier");
                ReportPropertyChanged("Pacifier");
                OnPacifierChanged();
            }
        }
        private Nullable<global::System.Boolean> _Pacifier;
        partial void OnPacifierChanging(Nullable<global::System.Boolean> value);
        partial void OnPacifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DayCareID
        {
            get
            {
                return _DayCareID;
            }
            set
            {
                OnDayCareIDChanging(value);
                ReportPropertyChanging("DayCareID");
                _DayCareID = StructuralObject.SetValidValue(value, "DayCareID");
                ReportPropertyChanged("DayCareID");
                OnDayCareIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DayCareID;
        partial void OnDayCareIDChanging(Nullable<global::System.Int32> value);
        partial void OnDayCareIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Questoinaire_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_Questoinaire_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "PersonToQuestionaire", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToQuestionaire", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.PersonToQuestionaire", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="ReleaseStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReleaseStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReleaseStatu object.
        /// </summary>
        /// <param name="releaseStatusID">Initial value of the ReleaseStatusID property.</param>
        /// <param name="releaseStatusDesc">Initial value of the ReleaseStatusDesc property.</param>
        public static ReleaseStatu CreateReleaseStatu(global::System.Int32 releaseStatusID, global::System.String releaseStatusDesc)
        {
            ReleaseStatu releaseStatu = new ReleaseStatu();
            releaseStatu.ReleaseStatusID = releaseStatusID;
            releaseStatu.ReleaseStatusDesc = releaseStatusDesc;
            return releaseStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseStatusID
        {
            get
            {
                return _ReleaseStatusID;
            }
            set
            {
                if (_ReleaseStatusID != value)
                {
                    OnReleaseStatusIDChanging(value);
                    ReportPropertyChanging("ReleaseStatusID");
                    _ReleaseStatusID = StructuralObject.SetValidValue(value, "ReleaseStatusID");
                    ReportPropertyChanged("ReleaseStatusID");
                    OnReleaseStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ReleaseStatusID;
        partial void OnReleaseStatusIDChanging(global::System.Int32 value);
        partial void OnReleaseStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReleaseStatusDesc
        {
            get
            {
                return _ReleaseStatusDesc;
            }
            set
            {
                OnReleaseStatusDescChanging(value);
                ReportPropertyChanging("ReleaseStatusDesc");
                _ReleaseStatusDesc = StructuralObject.SetValidValue(value, false, "ReleaseStatusDesc");
                ReportPropertyChanged("ReleaseStatusDesc");
                OnReleaseStatusDescChanged();
            }
        }
        private global::System.String _ReleaseStatusDesc;
        partial void OnReleaseStatusDescChanging(global::System.String value);
        partial void OnReleaseStatusDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_ReleaseStatus", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_ReleaseStatus", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Sample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sample object.
        /// </summary>
        /// <param name="sampleID">Initial value of the SampleID property.</param>
        public static Sample CreateSample(global::System.Int32 sampleID)
        {
            Sample sample = new Sample();
            sample.SampleID = sampleID;
            return sample;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                if (_SampleID != value)
                {
                    OnSampleIDChanging(value);
                    ReportPropertyChanging("SampleID");
                    _SampleID = StructuralObject.SetValidValue(value, "SampleID");
                    ReportPropertyChanged("SampleID");
                    OnSampleIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleID;
        partial void OnSampleIDChanging(global::System.Int32 value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Object
        {
            get
            {
                return _Object;
            }
            set
            {
                OnObjectChanging(value);
                ReportPropertyChanging("Object");
                _Object = StructuralObject.SetValidValue(value, true, "Object");
                ReportPropertyChanged("Object");
                OnObjectChanged();
            }
        }
        private global::System.String _Object;
        partial void OnObjectChanging(global::System.String value);
        partial void OnObjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SampleDate
        {
            get
            {
                return _SampleDate;
            }
            set
            {
                OnSampleDateChanging(value);
                ReportPropertyChanging("SampleDate");
                _SampleDate = StructuralObject.SetValidValue(value, "SampleDate");
                ReportPropertyChanged("SampleDate");
                OnSampleDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SampleDate;
        partial void OnSampleDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSampleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                OnPropertyIDChanging(value);
                ReportPropertyChanging("PropertyID");
                _PropertyID = StructuralObject.SetValidValue(value, "PropertyID");
                ReportPropertyChanged("PropertyID");
                OnPropertyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PropertyID;
        partial void OnPropertyIDChanging(Nullable<global::System.Int32> value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SampleTypeID
        {
            get
            {
                return _SampleTypeID;
            }
            set
            {
                OnSampleTypeIDChanging(value);
                ReportPropertyChanging("SampleTypeID");
                _SampleTypeID = StructuralObject.SetValidValue(value, "SampleTypeID");
                ReportPropertyChanged("SampleTypeID");
                OnSampleTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SampleTypeID;
        partial void OnSampleTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnSampleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MediuamID
        {
            get
            {
                return _MediuamID;
            }
            set
            {
                OnMediuamIDChanging(value);
                ReportPropertyChanging("MediuamID");
                _MediuamID = StructuralObject.SetValidValue(value, "MediuamID");
                ReportPropertyChanged("MediuamID");
                OnMediuamIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MediuamID;
        partial void OnMediuamIDChanging(Nullable<global::System.Int32> value);
        partial void OnMediuamIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Samples", "BloodResults")]
        public EntityCollection<BloodResult> BloodResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "BloodResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Samples", "BloodResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_Medium", "Medium")]
        public Medium Medium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_Samples_Medium", "Medium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_Samples_Medium", "Medium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medium> MediumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medium>("LeadTrackingProgram2Model.FK_Samples_Medium", "Medium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medium>("LeadTrackingProgram2Model.FK_Samples_Medium", "Medium", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Samples_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Samples_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("LeadTrackingProgram2Model.FK_Samples_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("LeadTrackingProgram2Model.FK_Samples_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_SampleType", "SampleType")]
        public SampleType SampleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleType>("LeadTrackingProgram2Model.FK_Samples_SampleType", "SampleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleType>("LeadTrackingProgram2Model.FK_Samples_SampleType", "SampleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SampleType> SampleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SampleType>("LeadTrackingProgram2Model.FK_Samples_SampleType", "SampleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SampleType>("LeadTrackingProgram2Model.FK_Samples_SampleType", "SampleType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="SampleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SampleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SampleType object.
        /// </summary>
        /// <param name="sampleTypeID">Initial value of the SampleTypeID property.</param>
        /// <param name="sampleType1">Initial value of the SampleType1 property.</param>
        public static SampleType CreateSampleType(global::System.Int32 sampleTypeID, global::System.String sampleType1)
        {
            SampleType sampleType = new SampleType();
            sampleType.SampleTypeID = sampleTypeID;
            sampleType.SampleType1 = sampleType1;
            return sampleType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SampleTypeID
        {
            get
            {
                return _SampleTypeID;
            }
            set
            {
                if (_SampleTypeID != value)
                {
                    OnSampleTypeIDChanging(value);
                    ReportPropertyChanging("SampleTypeID");
                    _SampleTypeID = StructuralObject.SetValidValue(value, "SampleTypeID");
                    ReportPropertyChanged("SampleTypeID");
                    OnSampleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SampleTypeID;
        partial void OnSampleTypeIDChanging(global::System.Int32 value);
        partial void OnSampleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SampleType1
        {
            get
            {
                return _SampleType1;
            }
            set
            {
                OnSampleType1Changing(value);
                ReportPropertyChanging("SampleType1");
                _SampleType1 = StructuralObject.SetValidValue(value, false, "SampleType1");
                ReportPropertyChanged("SampleType1");
                OnSampleType1Changed();
            }
        }
        private global::System.String _SampleType1;
        partial void OnSampleType1Changing(global::System.String value);
        partial void OnSampleType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Samples_SampleType", "Samples")]
        public EntityCollection<Sample> Samples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_SampleType", "Samples");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sample>("LeadTrackingProgram2Model.FK_Samples_SampleType", "Samples", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="SeedTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeedTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SeedTable object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static SeedTable CreateSeedTable(global::System.Int32 id)
        {
            SeedTable seedTable = new SeedTable();
            seedTable.id = id;
            return seedTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastNames
        {
            get
            {
                return _LastNames;
            }
            set
            {
                OnLastNamesChanging(value);
                ReportPropertyChanging("LastNames");
                _LastNames = StructuralObject.SetValidValue(value, true, "LastNames");
                ReportPropertyChanged("LastNames");
                OnLastNamesChanged();
            }
        }
        private global::System.String _LastNames;
        partial void OnLastNamesChanging(global::System.String value);
        partial void OnLastNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstNames
        {
            get
            {
                return _FirstNames;
            }
            set
            {
                OnFirstNamesChanging(value);
                ReportPropertyChanging("FirstNames");
                _FirstNames = StructuralObject.SetValidValue(value, true, "FirstNames");
                ReportPropertyChanged("FirstNames");
                OnFirstNamesChanged();
            }
        }
        private global::System.String _FirstNames;
        partial void OnFirstNamesChanging(global::System.String value);
        partial void OnFirstNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String streetnames
        {
            get
            {
                return _streetnames;
            }
            set
            {
                OnstreetnamesChanging(value);
                ReportPropertyChanging("streetnames");
                _streetnames = StructuralObject.SetValidValue(value, true, "streetnames");
                ReportPropertyChanged("streetnames");
                OnstreetnamesChanged();
            }
        }
        private global::System.String _streetnames;
        partial void OnstreetnamesChanging(global::System.String value);
        partial void OnstreetnamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true, "city");
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, true, "state");
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeadTrackingProgram2Model", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static Status CreateStatus(global::System.Int32 statusID, global::System.String statusName)
        {
            Status status = new Status();
            status.StatusID = statusID;
            status.StatusName = statusName;
            return status;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false, "StatusName");
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_BloodResults_Status", "BloodResults")]
        public EntityCollection<BloodResult> BloodResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Status", "BloodResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodResult>("LeadTrackingProgram2Model.FK_BloodResults_Status", "BloodResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeadTrackingProgram2Model", "FK_Person_Status", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_Status", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("LeadTrackingProgram2Model.FK_Person_Status", "Person", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
